{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scrollWidth","nextDisabled","prevDisabled","prevBtn","props","step","itemWidth","setState","prevState","scrolled","nextBtn","images","frameSize","maxScroll","length","this","animationDuration","className","style","width","transform","transition","map","img","src","alt","type","disabled","onClick","React","Component","App","changeStepsCount","value","changeFrameSize","changeItemWidth","changeAnimationDuration","min","max","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b239dc6.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\ntype State = {\n  scrollWidth: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    scrollWidth: 0,\n    nextDisabled: false,\n    prevDisabled: false,\n  };\n\n  prevBtn = () => {\n    const { step, itemWidth } = this.props;\n\n    this.setState((prevState) => {\n      const scrolled = prevState.scrollWidth - (step * itemWidth);\n\n      if (scrolled >= 0) {\n        return {\n          scrollWidth: scrolled,\n          nextDisabled: false,\n        };\n      }\n\n      return {\n        scrollWidth: 0,\n        prevDisabled: true,\n      };\n    });\n  };\n\n  nextBtn = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n    } = this.props;\n\n    this.setState((prevState) => {\n      const maxScroll = (images.length - frameSize) * itemWidth;\n      const scrolled = prevState.scrollWidth + (step * itemWidth);\n\n      if (scrolled <= maxScroll) {\n        return {\n          scrollWidth: scrolled,\n          prevDisabled: false,\n        };\n      }\n\n      return {\n        scrollWidth: maxScroll,\n        nextDisabled: true,\n      };\n    });\n  };\n\n  render() {\n    const {\n      scrollWidth,\n      prevDisabled,\n      nextDisabled,\n    } = this.state;\n\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n        }}\n      >\n        <ul\n          className=\"carousel__list\"\n          style={{\n            transform: `translateX(${-scrollWidth}px)`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((img) => (\n            <li\n              key={img}\n              className=\"carousel__item\"\n              style={{\n                width: `${itemWidth}px`,\n              }}\n            >\n              <img\n                src={img}\n                alt={img}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"prevBtn\"\n            disabled={prevDisabled}\n            onClick={this.prevBtn}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"nextBtn\"\n            disabled={nextDisabled}\n            onClick={this.nextBtn}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  changeStepsCount = (value: number) => {\n    this.setState({ step: value });\n  };\n\n  changeFrameSize = (value: number) => {\n    this.setState({ frameSize: value });\n  };\n\n  changeItemWidth = (value: number) => {\n    this.setState({ itemWidth: value });\n  };\n\n  changeAnimationDuration = (value: number) => {\n    this.setState({ animationDuration: value });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          Carousel with\n          {' '}\n          {images.length}\n          images\n        </h1>\n        <div className=\"nav\">\n          <div className=\"nav__item\">\n            <span>Step:</span>\n            <input\n              type=\"number\"\n              min=\"1\"\n              max={frameSize}\n              value={step}\n              onChange={({ target }) => {\n                this.changeStepsCount(+target.value);\n              }}\n            />\n          </div>\n          <div className=\"nav__item\">\n            <span>Frame size:</span>\n            <input\n              type=\"number\"\n              min=\"3\"\n              max={1300 / itemWidth}\n              value={frameSize}\n              onChange={({ target }) => {\n                this.changeFrameSize(+target.value);\n              }}\n            />\n          </div>\n          <div className=\"nav__item\">\n            <span>Item width:</span>\n            <input\n              type=\"number\"\n              min=\"100\"\n              max={1300 / frameSize}\n              value={itemWidth}\n              step=\"10\"\n              onChange={({ target }) => {\n                this.changeItemWidth(+target.value);\n              }}\n            />\n          </div>\n          <div className=\"nav__item\">\n            <span>Animation duration:</span>\n            <input\n              type=\"number\"\n              min=\"400\"\n              value={animationDuration}\n              step=\"100\"\n              onChange={({ target }) => {\n                this.changeAnimationDuration(+target.value);\n              }}\n            />\n          </div>\n        </div>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}